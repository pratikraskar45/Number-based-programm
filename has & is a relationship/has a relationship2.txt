package has_a_relationship_p3;

public class Ticket {
	private String movie_name;
	private int no_of_tickets;

	//constructor calling
	public Ticket(String m,int n) {
		this.movie_name=m;
		this.no_of_tickets=n;
	}

	public String getMovie_name() {
		return movie_name;
	}

	public void setMovie_name(String movie_name) {
		this.movie_name = movie_name;
	}

	public int getNo_of_tickets() {
		return no_of_tickets;
	}

	public void setNo_of_tickets(int no_of_tickets) {
		this.no_of_tickets = no_of_tickets;
	}
	
	public void printTicketDetails() {
		System.out.println("==========Ticket============");
		System.out.println("Movie name" + movie_name);
		System.out.println("Tickets booked"+ no_of_tickets);		
	}
	

}


package has_a_relationship_p3;

public class Theatre {
	
	private String theater_name;
	private int no_of_seats;
	  
	//has a relationship
	private Ticket ticket;
	
	public Theatre (String n,int no) {
		this.theater_name=n;
		this.no_of_seats=no;
	}

	public String getTheater_name() {
		return theater_name;
	}

	public void setTheater_name(String theater_name) {
		this.theater_name = theater_name;
	}

	public int getNo_of_seats() {
		return no_of_seats;
	}

	public void setNo_of_seats(int no_of_seats) {
		this.no_of_seats = no_of_seats;
	}

	public Ticket getTicket() {
		return ticket;
	}

	public void setTicket(Ticket ticket) {
		this.ticket = ticket;
	}
	
	//code of theatre operation
	public int bookTicket() {
		if(ticket.getNo_of_tickets()<=no_of_seats) {
			no_of_seats=no_of_seats-ticket.getNo_of_tickets();
			return ticket.getNo_of_tickets();
		}else {
			return -1;
		}
	}
		public int showSeatAvailability() {
			return no_of_seats;
		}
		public void cancelTicket(int cancel_ticket) {
			if(cancel_ticket<=ticket.getNo_of_tickets()) {
				no_of_seats=no_of_seats+cancel_ticket;
				ticket.setNo_of_tickets(ticket.getNo_of_tickets()-cancel_ticket);
			}else {
				System.out.println("============Technical issue==========");
			}
		}
		public void showTicketDetails() {
			ticket.printTicketDetails();
		}
	}	


package has_a_relationship_p3;

import java.util.Scanner;

public class BoxOffice {
	public static void main(String[]args){
		Scanner sc=new Scanner(System.in);
		Theatre theatre=new Theatre("Balaji",500);
		boolean flag=true;
		while(flag) {
			System.out.println("Enter 1.show Seat availability/n 2.book ticket"+"3.To check ticket details 4.; Cancel ticket,5Exit");
			int n=sc.nextInt();
			switch(n) {
			case 1: {
				int number_of_seats=theatre.getNo_of_seats();
				System.out.println(number_of_seats+"Seats are available");
			}
			break;
			case 2:{
				System.out.println("Enter the moive name");
				String name=sc.next();
				System.out.println("Enter the number of seats");
				int num=sc.nextInt();
				theatre.setTicket(new Ticket(name,num));
				int res =theatre.bookTicket();
				System.out.println("Succesfully booked"+res+"Tickets");
			}
			break;
			case 3:{
				System.out.println("Ticket Details");
				Ticket t=theatre.getTicket();
				System.out.println(t.getMovie_name());
				System.out.println(t.getNo_of_tickets());
				 //or
			//	System.out.println(theatre.getTicket().getMovie_name());
			}
			break;
			case 4:{
				System.out.println("Enter the number of ticket to be cancelled");
				int cancel=sc.nextInt();
				theatre.cancelTicket(cancel);
			}
			break;
			case 5:{
				System.out.println("Case 5");
				flag=false;
			}
			break;
			default:{
				System.out.println("Wrong input");
			}
			break;
			}
	   }
		
	}
}
